(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{163:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return r})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var a=t(2),o=t(9),i=(t(0),t(171)),l={id:"set-up-environment",title:"Setting up your local environment"},r={id:"development/set-up-environment",title:"Setting up your local environment",description:"The following instructions will help you set up your local environment to test and code this tool locally.",source:"@site/docs/development/set-up-environment.md",permalink:"/docs/development/set-up-environment",sidebar:"docs",previous:{title:"Environment Variables",permalink:"/docs/api/env-vars"}},c=[{value:"Requirements",id:"requirements",children:[{value:"Docker and Docker-Compose",id:"docker-and-docker-compose",children:[]},{value:"Golang",id:"golang",children:[]}]},{value:"Installing",id:"installing",children:[]},{value:"Running",id:"running",children:[]},{value:"Results",id:"results",children:[]},{value:"Make",id:"make",children:[]}],s={rightToc:c};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The following instructions will help you set up your local environment to test and code this tool locally."),Object(i.b)("h2",{id:"requirements"},"Requirements"),Object(i.b)("h3",{id:"docker-and-docker-compose"},"Docker and Docker-Compose"),Object(i.b)("p",null,"The easiest way to deploy huskyCI locally is by using ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/install/"}),"Docker")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/compose/install/"}),"Docker Compose"),", thus you should have them installed on your machine."),Object(i.b)("h3",{id:"golang"},"Golang"),Object(i.b)("p",null,"You must also have Golang installed to run and develop huskyCI. For Mac users you can install it via ",Object(i.b)("inlineCode",{parentName:"p"},"brew"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"brew install golang\n")),Object(i.b)("p",null,"For more detailed information on how to install Go in other stacks, you should check this ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://golang.org/doc/install"}),"official reference"),"."),Object(i.b)("h2",{id:"installing"},"Installing"),Object(i.b)("p",null,"After forking and cloning the huskyCI repository, simply run the command inside huskyCI's folder:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"make install\n")),Object(i.b)("h2",{id:"running"},"Running"),Object(i.b)("p",null,"After installing, a ",Object(i.b)("inlineCode",{parentName:"p"},".env")," file with the environment variables required to run a POC huskyCI analysis should be generated:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'export HUSKYCI_CLIENT_REPO_URL="https://github.com/globocom/huskyCI.git"\nexport HUSKYCI_CLIENT_REPO_BRANCH="poc-python-bandit"\nexport HUSKYCI_CLIENT_API_ADDR="http://localhost:8888"\nexport HUSKYCI_CLIENT_API_USE_HTTPS="false"\nexport HUSKYCI_CLIENT_TOKEN="{YOUR_TOKEN_HERE}"\n')),Object(i.b)("p",null,"You can change the repository and branch being analyzed by modifying the contents of ",Object(i.b)("inlineCode",{parentName:"p"},"HUSKYCI_CLIENT_REPO_URL")," and ",Object(i.b)("inlineCode",{parentName:"p"},"HUSKYCI_CLIENT_REPO_BRANCH"),". Then simply source it through the command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"source .env\n")),Object(i.b)("p",null,"Mac OS:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"make run-client\n")),Object(i.b)("p",null,"Linux:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"make run-client-linux\n")),Object(i.b)("h2",{id:"results"},"Results"),Object(i.b)("p",null,"If everything went well, you should see something similar to the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"[HUSKYCI][*] poc-python-bandit -> https://github.com/globocom/huskyCI.git\n[HUSKYCI][*] huskyCI analysis started! ZHLYMYOZkgkxZ5VhBumBXuwVe87yGyFQ\n\n[HUSKYCI][!] Language: Python\n[HUSKYCI][!] Tool: Bandit\n[HUSKYCI][!] Severity: LOW\n[HUSKYCI][!] Confidence: MEDIUM\n[HUSKYCI][!] Details: Possible hardcoded password: 'password123!'\n[HUSKYCI][!] File: ./main.py\n[HUSKYCI][!] Line: 1\n[HUSKYCI][!] Code:\n1 secret = 'password123!'\n2 \n3 password = 'thisisnotapassword' #nohusky\n4 \n\n\n[HUSKYCI][!] Language: Python\n[HUSKYCI][!] Tool: Bandit\n[HUSKYCI][!] Severity: MEDIUM\n[HUSKYCI][!] Confidence: HIGH\n[HUSKYCI][!] Details: Use of exec detected.\n[HUSKYCI][!] File: ./main.py\n[HUSKYCI][!] Line: 7\n[HUSKYCI][!] Code:\n6 \n7 exec(command)\n8 \n\n\n[HUSKYCI][!] Language: Python\n[HUSKYCI][!] Tool: Safety\n[HUSKYCI][!] Severity: low\n[HUSKYCI][!] Code: \n[HUSKYCI][!] Vulnerable Below: \n[HUSKYCI][!] Details: It looks like your project doesn't have a requirements.txt file. huskyCI was not able to run safety properly.\n\n[HUSKYCI][SUMMARY] Python -> huskyci/bandit:1.6.2\n[HUSKYCI][SUMMARY] High: 0\n[HUSKYCI][SUMMARY] Medium: 1\n[HUSKYCI][SUMMARY] Low: 1\n[HUSKYCI][SUMMARY] NoSecHusky: 1\n\n[HUSKYCI][SUMMARY] Python -> huskyci/safety:1.8.5\n[HUSKYCI][SUMMARY] High: 0\n[HUSKYCI][SUMMARY] Medium: 0\n[HUSKYCI][SUMMARY] Low: 1\n\n[HUSKYCI][SUMMARY] Total\n[HUSKYCI][SUMMARY] High: 0\n[HUSKYCI][SUMMARY] Medium: 1\n[HUSKYCI][SUMMARY] Low: 2\n[HUSKYCI][SUMMARY] NoSecHusky: 1\n\n[HUSKYCI][*] Some HIGH/MEDIUM issues were found :(\n")),Object(i.b)("h2",{id:"make"},"Make"),Object(i.b)("p",null,"huskyCI has some pre-defined functions that may help you locally develop awesome features. Simply run the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"make\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"huskyCI\n------\n$ make build-cli-linux: Builds CLI to the executable file huskyci-client\n$ make build-cli: Builds CLI to the executable file huskyci-client\n$ make build-client-linux: Builds client to the executable file huskyci-client\n$ make build-client: Builds client to the executable file huskyci-client\n$ make build-containers: Builds all securityTest containers locally with the tag latest\n$ make build: Builds Go project to the executable file huskyci\n$ make check-containers-version: Checks every securityTest version from their container images\n$ make check-deps: Checks dependencies of the project\n$ make check-env: Checks .env file from huskyCI\n$ make check-sec: Runs a security static analysis using Gosec\n$ make compose: Composes huskyCI environment using docker-compose\n$ make coverage: Run tests with code coverage\n$ make create-certs: Creates certs and sets all config to huskyCI_Docker_API\n$ make generate-local-token: Generates a local token to be used in a local environment\n$ make generate-passwords: Generates passwords and set them as environment variables\n$ make get-gosec-deps: Gets all gosec dependencies\n$ make get-lint-deps: Gets all link dependencies\n$ make get-test-deps: Gets all go test dependencies\n$ make ginkgo: Runs ginkgo\n$ make golangci-lint: Runs Golangci-lint\n$ make golint: Runs go lint\n$ make gosec: Runs gosec\n$ make help: Prints help message\n$ make install: Installs a development environment using docker-compose\n$ make lint: Runs all huskyCI lint\n$ make push-containers: Push securityTest containers to hub.docker\n$ make restart-huskyci-api: Restarts only huskyCI_API container\n$ make run-cli-linux: Run huskyci-client compiling it in Linux arch\n$ make run-cli: Runs huskyci-client\n$ make run-client-json: Runs huskyci-client with JSON output\n$ make run-client-linux-json: Run huskyci-client compiling it in Linux arch with JSON output\n$ make run-client-linux: Run huskyci-client compiling it in Linux arch\n$ make run-client: Runs huskyci-client\n$ make test: Perfoms all make tests\n$ make update-containers: Builds and push securityTest containers with the latest tags\n")))}u.isMDXComponent=!0},171:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),u=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?o.a.createElement(b,r(r({ref:n},s),{},{components:t})):o.a.createElement(b,r({ref:n},s))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var r={};for(var c in n)hasOwnProperty.call(n,c)&&(r[c]=n[c]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var s=2;s<i;s++)l[s]=t[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);