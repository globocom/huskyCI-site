(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));var c=n(2),r=n(9),a=(n(0),n(171)),l={id:"install-in-my-org",title:"Installing in my organization"},b={id:"guides/install-in-my-org",title:"Installing in my organization",description:"MongoDB",source:"@site/docs/guides/install-in-my-org.md",permalink:"/docs/guides/install-in-my-org",sidebar:"docs",previous:{title:"Adding the huskyCI stage",permalink:"/docs/quickstart/setup-my-ci"},next:{title:"Integrating with SonarQube",permalink:"/docs/guides/integrating-with-sonar"}},o=[{value:"MongoDB",id:"mongodb",children:[]},{value:"huskyCI Docker API (CentOS instructions)",id:"huskyci-docker-api-centos-instructions",children:[]},{value:"huskyCI API (tsuru PaaS instructions)",id:"huskyci-api-tsuru-paas-instructions",children:[]},{value:"huskyCI Client (tsuru PaaS instructions)",id:"huskyci-client-tsuru-paas-instructions",children:[]},{value:"Developer&#39;s CI",id:"developers-ci",children:[]}],p={rightToc:o};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(c.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"mongodb"},"MongoDB"),Object(a.b)("p",null,"Set up a MongoDB using your desired OS/configuration (preferably secure \ud83d\udc3c)."),Object(a.b)("h2",{id:"huskyci-docker-api-centos-instructions"},"huskyCI Docker API (CentOS instructions)"),Object(a.b)("h4",{id:"install-docker-api"},"Install docker API:"),Object(a.b)("p",null,"Install ",Object(a.b)("inlineCode",{parentName:"p"},"docker-engine"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"yum install docker-engine\n")),Object(a.b)("p",null,"Create a docker service folder:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"mkdir /etc/systemd/system/docker.service.d\n")),Object(a.b)("p",null,"Set these configuration into override.conf:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"vim /etc/systemd/system/docker.service.d/override.conf\n")),Object(a.b)("p",null,"Add this content to override.conf:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"[Service]\nExecStart=\nExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2376\n")),Object(a.b)("p",null,"Reload daemon:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"systemctl daemon-reload\n")),Object(a.b)("p",null,"Restart docker:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"systemctl restart docker.service\n")),Object(a.b)("p",null,"Test docker API locally:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"curl localhost:2376/v1.24/version\n")),Object(a.b)("hr",null),Object(a.b)("h4",{id:"securing-your-docker-api-recommended-"},"Securing your Docker API (recommended \ud83d\udc3c):"),Object(a.b)("p",null,"Create certificates folder:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"mkdir /data/certs && cd /data/certs\n")),Object(a.b)("p",null,"Download ",Object(a.b)("inlineCode",{parentName:"p"},"create-certs.sh")," script from huskyCI:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"wget https://raw.githubusercontent.com/globocom/huskyCI/master/deployments/scripts/create-certs.sh\n")),Object(a.b)("p",null,"Set environment variables with certificate's information:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"echo 'export CERT_PASSPHRASE=\"mypassword$RANDOM\"' > .env\necho 'export CERT_DOCKER_API_HOST=\"address.to.dockerapi.host\"' >> .env\necho 'export CERT_HUSKYCI_HOST=\"address.to.huskyci.host\"' >> .env\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),". .env\n")),Object(a.b)("p",null,"Create CA certificate:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"chmod +x create-certs.sh\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"./create-certs.sh -m ca -pw $CERT_PASSPHRASE -t . -e 900\n")),Object(a.b)("p",null,"Create docker API server certificate:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"./create-certs.sh -m server -h $CERT_DOCKER_API_HOST -pw $CERT_PASSPHRASE -t . -e 365\n")),Object(a.b)("p",null,"Create docker API client certificate:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"./create-certs.sh -m client -h $CERT_HUSKYCI_HOST -pw $CERT_PASSPHRASE -t . -e 365\n")),Object(a.b)("p",null,"Update override.conf configuration:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"vim /etc/systemd/system/docker.service.d/override.conf\n")),Object(a.b)("p",null,"Add this new content to override.conf:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"[Service]\nExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/data/certs/ca.pem --tlscert=/data/certs/server-cert.pem --tlskey=/data/certs/server-key.pem -H fd:// -H tcp://0.0.0.0:2376\n")),Object(a.b)("p",null,"Reload daemon:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"systemctl daemon-reload\n")),Object(a.b)("p",null,"Restart docker:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"systemctl restart docker.service\n")),Object(a.b)("p",null,"Test secure docker API locally:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"curl -k https://localhost:2376/v1.24/version --cert /data/certs/client-cert.pem --key /data/certs/client-key.pem --cacert /data/certs/ca.pem\n")),Object(a.b)("p",null,"You need now to save ",Object(a.b)("inlineCode",{parentName:"p"},"ca.pem"),", ",Object(a.b)("inlineCode",{parentName:"p"},"client-key.pem")," and ",Object(a.b)("inlineCode",{parentName:"p"},"client-cert.pem")," to be used in huskyCI host so it can connect to docker API securely! \ud83d\udd12"),Object(a.b)("h4",{id:"pulling-images"},"Pulling images"),Object(a.b)("p",null,"After setting up huskyCI Docker API, you can pull ",Object(a.b)("a",Object(c.a)({parentName:"p"},{href:"https://hub.docker.com/u/huskyci"}),"huskyCI images")," into this host or let huskyCI do this automatically when receiving first requests (may take some time). If you prefer the first strategy, use the following commands:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/enry\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/bandit\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/safety\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/brakeman\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/gosec\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/spotbugs\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/npmaudit\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/yarnaudit\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/gitauthors\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"docker pull huskyci/gitleaks\n")),Object(a.b)("h2",{id:"huskyci-api-tsuru-paas-instructions"},"huskyCI API (",Object(a.b)("a",Object(c.a)({parentName:"h2"},{href:"https://github.com/tsuru/tsuru"}),"tsuru")," PaaS instructions)"),Object(a.b)("p",null,"Go to huskyCI folder:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"cd $GOPATH/src/github.com/globocom/huskyCI\n")),Object(a.b)("p",null,"Copy certificates generated into ",Object(a.b)("inlineCode",{parentName:"p"},"api")," folder:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"cp $MYCERTFOLDER/{ca.pem,client-key.pem,client-cert.pem} api/\n")),Object(a.b)("p",null,"Rename ",Object(a.b)("inlineCode",{parentName:"p"},"client-key.pem")," and ",Object(a.b)("inlineCode",{parentName:"p"},"client-cert.pem")," so huskyCI can read the right files when deploying: "),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"mv client-key.pem key.pem\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"mv client-cert.pem cert.pem\n")),Object(a.b)("p",null,"Build huskyCI:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"make build\n")),Object(a.b)("p",null,"Create a new Tsuru app:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"tsuru app-create huskyCI go \n")),Object(a.b)("p",null,"Set all environment variables needed (",Object(a.b)("a",Object(c.a)({parentName:"p"},{href:"https://github.com/globocom/huskyci/wiki/API-Environment-Variables"}),"complete list"),"):"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"tsuru env-set MONGO_HOST=urlto.mongo.com -p\n")),Object(a.b)("p",null,"If you want huskyCI to use HTTPS, generate ",Object(a.b)("inlineCode",{parentName:"p"},"api-tls-cert.pem")," and ",Object(a.b)("inlineCode",{parentName:"p"},"api-tls-key.pem")," before deploying. Also, you should set ",Object(a.b)("inlineCode",{parentName:"p"},"HUSKY_API_ENABLE_HTTPS")," environment variable to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),". "),Object(a.b)("p",null,"If you've decided to use the Docker API secure method mentioned above, you need to set these environment variables with the commands below:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),'tsuru env-set -p -a <my-app\'s-name> HUSKYCI_DOCKERAPI_CERT_FILE_VALUE="$(cat /path/to/my/file)"\ntsuru env-set -p -a <my-app\'s-name> HUSKYCI_DOCKERAPI_CERT_KEY_VALUE ="$(cat /path/to/my/file)"\ntsuru env-set -p -a <my-app\'s-name> HUSKYCI_DOCKERAPI_CERT_CA_VALUE ="$(cat /path/to/my/file)"\n')),Object(a.b)("p",null,"Deploy huskyCI in tsuru (HTTP):"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),"tsuru app-deploy -a huskyCI api/huskyci api/config.yaml Procfile\n")),Object(a.b)("p",null,"Deploy huskyCI in Tsuru (HTTPS enabled):"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{}),'tsuru env-set -p -a <my-app\'s-name> HUSKYCI_DOCKERAPI_API_TLS_CERT_VALUE ="$(cat /path/to/my/file)"\ntsuru env-set -p -a <my-app\'s-name> HUSKYCI_DOCKERAPI_API_TLS_KEY_VALUE ="$(cat /path/to/my/file)"\ntsuru app-deploy -a huskyCI api/huskyci api/config.yaml Procfile\n')),Object(a.b)("h2",{id:"huskyci-client-tsuru-paas-instructions"},"huskyCI Client (",Object(a.b)("a",Object(c.a)({parentName:"h2"},{href:"https://github.com/tsuru/tsuru"}),"tsuru")," PaaS instructions)"),Object(a.b)("p",null,"Build client locally (Linux binary): "),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"make build-client-linux\n")),Object(a.b)("p",null,"Create a static Tsuru app: "),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"tsuru app-create huskyCI-client static \n")),Object(a.b)("p",null,"Deploy huskyCI client in Tsuru:"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"tsuru app-deploy -a huskyCI-client huskyci-client\n")),Object(a.b)("h2",{id:"developers-ci"},"Developer's CI"),Object(a.b)("p",null,"Ask kindly \ud83d\udc3c your development team to add a new stage into their project's CI (",Object(a.b)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," example):"),Object(a.b)("pre",null,Object(a.b)("code",Object(c.a)({parentName:"pre"},{className:"language-yml"}),'\nstages:\n  - huskyCI\n\nhuskyCI:\n    stage: huskyCI\n    variables:\n        HUSKYCI_CLIENT_URL: http://urlto.huskyci-client\n        HUSKYCI_CLIENT_API_ADDR: http://urlto.huskyci-API\n        HUSKYCI_CLIENT_REPO_URL: gitlab@gitlab.YOURORG.com:$CI_PROJECT_PATH.git\n        HUSKYCI_CLIENT_REPO_BRANCH: $CI_COMMIT_REF_NAME\n        HUSKYCI_CLIENT_API_USE_HTTPS: "false"\n    script:\n        - wget $HUSKYCI_CLIENT_URL/huskyci-client\n        - chmod +x huskyci-client\n        - ./huskyci-client\n')))}s.isMDXComponent=!0},171:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return d}));var c=n(0),r=n.n(c);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,c)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,c,r=function(e,t){if(null==e)return{};var n,c,r={},a=Object.keys(e);for(c=0;c<a.length;c++)n=a[c],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(c=0;c<a.length;c++)n=a[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},i=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,c=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),i=s(n),O=c,d=i["".concat(l,".").concat(O)]||i[O]||u[O]||a;return n?r.a.createElement(d,b(b({ref:t},p),{},{components:n})):r.a.createElement(d,b({ref:t},p))}));function d(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var a=n.length,l=new Array(a);l[0]=O;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:c,l[1]=b;for(var p=2;p<a;p++)l[p]=n[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);